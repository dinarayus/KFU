#include <iostream>
#include <fstream>
#include <algorithm>

// Функция для подсчета суммы цифр числа
int digitSum(int number) {
    int sum = 0;
    while (number != 0) {
        sum += number % 10;
        number /= 10;
    }
    return sum;
}
void vybor(int a[], int N) {
	int count = 0;
	for (int i = 0; i < N - 1; i++) {
		int min = i;
		for (int j = i + 1; j < N; j++) {

			if (a[j] < a[min])
				min = j;
		}
		if (min != i) {
			int tmp = a[min];
			a[min] = a[i];
			a[i] = tmp;
		}
	}
 }
 
int main() {
    ifstream inputFile("input.txt"); // Открытие файла для чтения
    ofstream outputFile("output.txt"); // Открытие файла для записи
    int N; 
    inputFile >> N;

    int* numbers = new int[arraySize]; // Выделяем память для массива

    // Чтение чисел из файла и сохранение в массиве
    for (int i = 0; i < arraySize; ++i) {
        inputFile >> numbers[i];
    }

    inputFile.close(); // Закрываем файл

    // Вывод чисел массива
    for (int i = 0; i < arraySize; ++i) {
        std::cout << numbers[i] << " ";
    }

    delete[] numbers; // Освобождаем память, выделенную для массива

    return 0;
}
    int number;
    
    vector<int> numbers;

    // Чтение чисел из файла и добавление их в вектор
    while (inputFile >> number) {
        numbers.push_back(number);
    }

    // Сортировка чисел по сумме цифр
    sort(numbers.begin(), numbers.end(), [](int number1, int number2) {
        return digitSum(number1) < digitSum(number2);
    });

    // Запись отсортированных чисел в файл
    for (int number : numbers) {
        outputFile << number << " ";
    }

    inputFile.close(); // Закрытие файла для чтения
    outputFile.close(); // Закрытие файла для записи

    return 0;
}
