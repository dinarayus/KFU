#include <iostream>
#include <fstream>
#include <vector>
#include <algorithm>

int main() {
    // Открываем первый файл для чтения
    ifstream file1("file1.txt");
    if (!file1.is_open()) {
        cout << "Не удалось открыть file1.txt" << endl;
        return 0;
    }

    // Открываем второй файл для чтения
    ifstream file2("file2.txt");
    if (!file2.is_open()) {
        cout << "Не удалось открыть file2.txt" << endl;
        return 0;
    }
     int[] a1 = new int[] {21, 23, 24, 40, 75, 76, 78, 77, 900, 2100, 2200, 2300, 2400, 2500};
    int[] a2 = new int[] {10, 11, 41, 50, 65, 86, 98, 101, 190, 1100, 1200, 3000, 5000};
    int[] a3 = new int[a1.length + a2.length];

    int i=0, j=0;
    for (int k=0; k<a3.length; k++) {

        if (i > a1.length-1) {
            int a = a2[j];
            a3[k] = a;
            j++;
        }
        else if (j > a2.length-1) {
            int a = a1[i];
            a3[k] = a;
            i++;
        }
        else if (a1[i] < a2[j]) {
            int a = a1[i]; 
            a3[k] = a;
            i++;
        }
        else {
            int b = a2[j];
            a3[k] = b;
            j++;
        }
    }

    // Читаем числа из первого файла и сохраняем их в векторе
    vector<int> numbers1;
    int number;
    while (file1 >> number) {
        numbers1.push_back(number);
    }

    // Читаем числа из второго файла и сохраняем их в векторе
    vector<int> numbers2;
    while (file2 >> number) {
        numbers2.push_back(number);
    }

    // Закрываем файлы
    file1.close();
    file2.close();

    // Объединяем два вектора
    vector<int> merged;
    merged.reserve(numbers1.size() + numbers2.size());
    merged.insert(merged.end(), numbers1.begin(), numbers1.end());
    merged.insert(merged.end(), numbers2.begin(), numbers2.end());

    // Сортируем объединенный вектор
    sort(merged.begin(), merged.end());

    // Открываем третий файл для записи
    ofstream file3("file3.txt");
    if (!file3.is_open()) {
        std::cout << "Не удалось открыть file3.txt" << std::endl;
        return 0;
    }

    // Записываем отсортированные числа в третий файл
    for (const auto& num : merged) {
        file3 << num << " ";
    }

    // Закрываем третий файл
    file3.close();

    return 0;
}
